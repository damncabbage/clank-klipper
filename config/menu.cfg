# This file overrides the default klipper menu layout
# (see display.menu_root in printer.cfg)


### MENU ###
# + Tune

#Tasks:
#- Calibration
#  - HomeAll
#  - Bed Cooldown
#	 - Bed Screws...
#		 - Start BED_SCREWS_ADJUST
#    = if global.screw_calibrating
#      - Adjusted
#      - Accept (auto-finishes)
#      - Abort
#    = else
#      - Bed Cooldown
#  - Z Probe...
#    - Go to Middle
#		 - Start PROBE_CALIBRATE
#    = if global.zprobe_calibrating
#      - Adjust
#      - Accept & Save
#      - Abort
#  - Bed Mesh Recalibrate
#  - Pressure Advance...
#    - Pre-Print Setup
#- Preparing for print
#  - Filament swapping
#    - Adding from blank
#    - Swapping from same-to-same type
#    - Swapping to different type
#  - Choosing file to print
#- During print
#  - Cancelling
#  - Pause+Resume
#	 - Tuning
#		 - Set Z-Offset (neg up)
#		 - Save Z-Offset (Z_OFFSET_APPLY_PROBE)
#		 - Speed
#		 - Flow
#  - Filament change for layer
#- Manual Control
#  - Motors (X, Y, Z, E)
#		- Home All
#		- Home X/Y
#		- Steppers Off
#  - Heaters
#		- Heat All
#		- Heat Hotend
#		- Heat Bed
#		- Cooldown
#	- Fans
#		- Readout
#		- Cooling Fan On/Off (TODO: Speed when we have a PWM one)
#	- Lights
#		- Off
#		- White
#		- Gay


### DEFAULT MENU ###
# Main
#   + Tune
#       + Speed: 000%
#       + Flow: 000%
#       + Offset Z:00.00
#   + OctoPrint
#       + Pause printing
#       + Resume printing
#       + Abort printing
#   + SD Card
#       + Start printing
#       + Resume printing
#       + Pause printing
#       + Cancel printing
#       + ... (files)
#   + Control
#       + Home All
#       + Home Z
#       + Home X/Y
#       + Z Tilt
#       + Quad Gantry Lvl
#       + Bed Mesh
#       + Steppers off
#       + Fan: OFF
#       + Fan speed: 000%
#       + Lights: OFF
#       + Lights: 000%
#       + Move 10mm
#           + Move X:000.0
#           + Move Y:000.0
#           + Move Z:000.0
#           + Move E:+000.0
#       + Move 1mm
#           + Move X:000.0
#           + Move Y:000.0
#           + Move Z:000.0
#           + Move E:+000.0
#       + Move 0.1mm
#           + Move X:000.0
#           + Move Y:000.0
#           + Move Z:000.0
#           + Move E:+000.0
#   + Temperature
#       + Ex0:000 (0000)
#       + Ex1:000 (0000)
#       + Bed:000 (0000)
#       + Preheat PLA
#           + Preheat all
#           + Preheat hotend
#           + Preheat hotbed
#       + Preheat ABS
#           + Preheat all
#           + Preheat hotend
#           + Preheat hotbed
#       + Cooldown
#           + Cooldown all
#           + Cooldown hotend
#           + Cooldown hotbed
#   + Filament
#       + Ex0:000 (0000)
#       + Load Fil. fast
#       + Load Fil. slow
#       + Unload Fil.fast
#       + Unload Fil.slow
#       + Feed: 000.0
#   + Setup
#       + Save config
#       + Restart
#           + Restart host
#           + Restart FW
#       + PID tuning
#           + Tune Hotend PID
#           + Tune Hotbed PID
#       + Calibration
#           + Delta cal. auto
#           + Delta cal. man
#               + Start probing
#               + Move Z: 000.00
#               + Test Z: ++
#               + Accept
#               + Abort
#           + Bed probe
#       + Dump parameters

### Menu Root ###
[menu __e3]
type: list
name: Main

### Calibration
[menu __e3 calibration]
type: list
enable: {printer.idle_timeout.state != "Printing"}
name: Calibration

[menu __e3 calibration homeAll]
type: command
name: Home Needed
gcode:
    HOME_UNHOMED_AXES

[menu __e3 calibration bedMesh]
type: command
enable: {'bed_mesh' in printer}
name: Bed Mesh Calibrate + Save
gcode: BED_MESH_CALIBRATE_AND_SAVE

[menu __e3 calibration pressureAdvance]
type: command
name: Pressure Advance Pre-Print Setup
gcode: PRESSURE_ADVANCE_PREPRINT_SETUP

### + Bed Screws
[menu __e3 calibration bedScrews]
type: list
name: Bed Screws...

[menu __e3 calibration bedScrews start]
type: command
name: Start
gcode:
		M117 Heating bed...
		BED_PREHEAT_AND_WAIT
		M117
    BED_SCREWS_ADJUST

[menu __e3 calibration bedScrews adjust]
type: input
name: Move Z: {['+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01'][menu.input|int]}
input: 4
input_min: 0
input_max: 7
input_step: 1
gcode:
    {%- if menu.event == 'long_click' -%}
        TESTZ Z={['+.01','+.05','+0.1','+0.5','-0.5','-0.1','-.05','-.01'][menu.input|int]}
    {%- endif -%}

[menu __e3 calibration bedScrews adjusted]
type: command
name: Adjusted
gcode:
    ADJUSTED

[menu __e3 calibration bedScrews accept]
type: command
name: Accept
gcode:
    ACCEPT

[menu __e3 calibration bedScrews abort]
type: command
name: Abort
gcode:
    ABORT
		BED_COOLDOWN_ASYNC
    G1 Z10

[menu __e3 calibration bedScrews bedCooldown]
type: command
name: {"Cooldown Bed (%2.0f)" % (printer.heater_bed.temperature)}
gcode: BED_COOLDOWN_ASYNC


### + Z-Probe
[menu __e3 calibration zProbe]
type: list
name: Z-Probe...

[menu __e3 calibration zProbe goToMiddle]
type: command
name: "Home -> Middle"
gcode:
    HOME_UNHOMED_AXES
		G1 X170 Y131

[menu __e3 calibration zProbe start]
type: command
name: Start
gcode:
		M117 Heating bed...
		BED_PREHEAT_AND_WAIT
		M117
    PROBE_CALIBRATE

[menu __e3 calibration zProbe adjust]
type: input
name: Adjust Z: {['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
input: 6
input_min: 0
input_max: 11
input_step: 1
gcode:
    {%- if menu.event == 'long_click' -%}
        TESTZ Z={['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
    {%- endif -%}

[menu __e3 calibration zProbe save]
type: command
name: Accept & Save
gcode:
		ACCEPT
    BED_COOLDOWN_ASYNC
    SAVE_CONFIG

[menu __e3 calibration zProbe abort]
type: command
name: Abort
gcode:
    ABORT
		BED_COOLDOWN_ASYNC
    G1 Z15 ; lift head up	


### Prepare
[menu __e3 prepare]
type: list
enable: {printer.idle_timeout.state != "Printing"}
name: Prepare

[menu __e3 prepare cleaning]
type: list
name: Cleaning

[menu __e3 prepare cleaning presentBed]
type: command
name: Present Bed
gcode:
    HOME_UNHOMED_AXES
		G90 ; absolute
		G1 Y220 Z40 ; Z up, Bed out
		M117 Ready.
		; TODO: some M117 M118 RESPOND thingy

[menu __e3 prepare cleaning done]
type: command
name: Done
gcode:
		G28 XY
		G1 Z15 ; close enough to bed but enough space to clear droops

[menu __e3 prepare filament]
type: list
name: Filament

[menu __e3 prepare filament hotendTarget]
type: input
enable: {'extruder' in printer}
name: {"Hotend:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input: {printer.extruder.target}
input_min: 0
input_max: {printer.configfile.config.extruder.max_temp}
input_step: 1
gcode: M104 T0 S{'%.0f' % menu.input}

; Filament path from extruder to hotend is ~450mm.
; Max move is 100mm.

[menu __e3 prepare filament unload]
type: command
name: "Unload"
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
		HOTEND_PREHEAT_AND_WAIT
    M83 ; E relative mode
    G1 E+4   F240 ; E=+4; shape filament end
    G1 E-54  F400 ; E=-50
    G1 E-100 F960 ; E=-150; fast
    G1 E-100 F960 ; E=-250; fast
    G1 E-100 F960 ; E=-350; fast
    G1 E-100 F960 ; E=-450; fast
    G1 E-50  F960 ; E=-500; fast
    G1 E-50  F540 ; E=-550; slowish to finish it out.
		M117 Unloaded.
		; TODO: M300 BEEP
		UPDATE_DELAYED_GCODE ID=clear_display DURATION=5
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __e3 prepare filament load]
type: command
name: "Load"
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
		HOTEND_PREHEAT_AND_WAIT
    M83 ; E relative mode
    G1 E100 F960 ; fast
    G1 E100 F960 ; fast
    G1 E100 F960 ; fast
    G1 E70  F960 ; fast
    G1 E50  F400 ; slowish
		M117 Loaded, Purging...
    G1 E30  F240 ; slooow
		M117 Loaded.
		; TODO: Confirmation? Keep Purging?
		; TODO: M300 BEEP
		UPDATE_DELAYED_GCODE ID=clear_display DURATION=5
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __e3 prepare filament feed]
type: input
name: Manual E: {'%.1f' % menu.input}
input: 0
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E{'%.1f' % menu.input} F240 ; sloooow
    RESTORE_GCODE_STATE NAME=__filament__load


### During Print
[menu __e3 printing]
type: list
enable: {printer.idle_timeout.state == "Printing"}
name: "During Print"

[menu __e3 printing abort]
type: command
name: Abort
gcode:
    {action_respond_info('action:cancel')}

# TODO: pause+resume

[menu __e3 printing tune]
type: list
name: Tuning

[menu __e3 printing tune offsetz]
type: input
name: Offset Z:{'%05.3f' % menu.input}
input: {printer.gcode_move.homing_origin.z}
input_min: -5
input_max: 5
input_step: 0.005
realtime: True
gcode:
    SET_GCODE_OFFSET Z={'%.3f' % menu.input} MOVE=1

[menu __e3 printing tune speed]
type: input
name: Speed: {'%3d' % (menu.input*100)}%
input: {printer.gcode_move.speed_factor}
input_min: 0.01
input_max: 5
input_step: 0.01
realtime: True
gcode:
    M220 S{'%d' % (menu.input*100)}

[menu __e3 printing tune flow]
type: input
name: Flow: {'%3d' % (menu.input*100)}%
input: {printer.gcode_move.extrude_factor}
input_min: 0.01
input_max: 2
input_step: 0.01
realtime: True
gcode:
    M221 S{'%d' % (menu.input*100)}

### menu octoprint ###
[menu __e3 __octoprint]
type: list
name: OctoPrint

[menu __e3 __octoprint __pause]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Pause printing
gcode:
    {action_respond_info('action:pause')}

[menu __e3 __octoprint __resume]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Resume printing
gcode:
    {action_respond_info('action:resume')}

[menu __e3 __octoprint __abort]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Abort printing
gcode:
    {action_respond_info('action:cancel')}

### menu virtual sdcard ###
[menu __e3 __sdcard]
type: vsdlist
enable: {('virtual_sdcard' in printer)}
name: SD Card

[menu __e3 __sdcard __start]
type: command
enable: {('virtual_sdcard' in printer) and printer.virtual_sdcard.file_path and not printer.virtual_sdcard.is_active}
name: Start printing
gcode: M24

[menu __e3 __sdcard __resume]
type: command
enable: {('virtual_sdcard' in printer) and printer.print_stats.state == "paused"}
name: Resume printing
gcode:
    {% if "pause_resume" in printer %}
        RESUME
    {% else %}
        M24
    {% endif %}

[menu __e3 __sdcard __pause]
type: command
enable: {('virtual_sdcard' in printer) and printer.print_stats.state == "printing"}
name: Pause printing
gcode:
    {% if "pause_resume" in printer %}
        PAUSE
    {% else %}
        M25
    {% endif %}

[menu __e3 __sdcard __cancel]
type: command
enable: {('virtual_sdcard' in printer) and (printer.print_stats.state == "printing" or printer.print_stats.state == "paused")}
name: Cancel printing
gcode:
    {% if 'pause_resume' in printer %}
        CANCEL_PRINT
    {% else %}
        M25
        M27
        M26 S0
        TURN_OFF_HEATERS
        {% if printer.toolhead.position.z <= printer.toolhead.axis_maximum.z - 5 %}
            G91
            G0 Z5 F1000
            G90
        {% endif %}
    {% endif %}

### menu control ###
[menu __e3 __control]
type: list
name: "Man. Control"

[menu __e3 __control __home]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home All
gcode: G28

[menu __e3 __control __homex]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home X
gcode: G28 X

[menu __e3 __control __homez]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home Z
gcode: G28 Z

[menu __e3 __control __homexy]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home X/Y
gcode: G28 X Y

[menu __e3 __control __z_tilt]
type: command
enable: {not printer.idle_timeout.state == "Printing" and ('z_tilt' in printer)}
name: Z Tilt
gcode: Z_TILT_ADJUST

[menu __e3 __control __quad_gantry_level]
type: command
enable: {not printer.idle_timeout.state == "Printing" and ('quad_gantry_level' in printer)}
name: Quad Gantry Lvl
gcode: QUAD_GANTRY_LEVEL

[menu __e3 __control __bed_mesh]
type: command
enable: {not printer.idle_timeout.state == "Printing" and ('bed_mesh' in printer)}
name: Bed Mesh
gcode: BED_MESH_CALIBRATE

[menu __e3 __control __disable]
type: command
name: Steppers off
gcode:
    M84
    M18

[menu __e3 __control __fanonoff]
type: input
enable: {'fan' in printer}
name: Fan: {'ON ' if menu.input else 'OFF'}
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 1
gcode:
    M106 S{255 if menu.input else 0}

[menu __e3 __control __fanspeed]
type: input
enable: {'fan' in printer}
name: Fan speed: {'%3d' % (menu.input*100)}%
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 0.01
gcode:
    M106 S{'%d' % (menu.input*255)}

[menu __e3 __control __caselightonoff]
type: input
enable: {'output_pin caselight' in printer}
name: Lights: {'ON ' if menu.input else 'OFF'}
input: {printer['output_pin caselight'].value}
input_min: 0
input_max: 1
input_step: 1
gcode:
    SET_PIN PIN=caselight VALUE={1 if menu.input else 0}

[menu __e3 __control __caselightpwm]
type: input
enable: {'output_pin caselight' in printer}
name: Lights: {'%3d' % (menu.input*100)}%
input: {printer['output_pin caselight'].value}
input_min: 0.0
input_max: 1.0
input_step: 0.01
gcode:
    SET_PIN PIN=caselight VALUE={menu.input}

### menu move 10mm ###
[menu __e3 __control __move_10mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Move 10mm

[menu __e3 __control __move_10mm __axis_x]
type: input
name: Move X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __e3 __control __move_10mm __axis_y]
type: input
name: Move Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __e3 __control __move_10mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __e3 __control __move_10mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move E:{'%+06.1f' % menu.input}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 10.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

### menu move 1mm ###
[menu __e3 __control __move_1mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Move 1mm

[menu __e3 __control __move_1mm __axis_x]
type: input
name: Move X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __e3 __control __move_1mm __axis_y]
type: input
name: Move Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __e3 __control __move_1mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __e3 __control __move_1mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move E:{'%+06.1f' % menu.input}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

### menu move 0.1mm ###
[menu __e3 __control __move_01mm]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Move 0.1mm

[menu __e3 __control __move_01mm __axis_x]
type: input
name: Move X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __e3 __control __move_01mm __axis_y]
type: input
name: Move Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __e3 __control __move_01mm __axis_z]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis

[menu __e3 __control __move_01mm __axis_e]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: Move E:{'%+06.1f' % menu.input}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis

### menu temperature ###
[menu __e3 __temp]
type: list
name: Temperature

[menu __e3 __temp __hotend0_target]
type: input
enable: {('extruder' in printer) and ('extruder' in printer.heaters.available_heaters)}
name: {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input: {printer.extruder.target}
input_min: 0
input_max: {printer.configfile.config.extruder.max_temp}
input_step: 1
gcode: M104 T0 S{'%.0f' % menu.input}

[menu __e3 __temp __hotbed_target]
type: input
enable: {'heater_bed' in printer}
name: {"Bed:%3.0f (%4.0f)" % (menu.input, printer.heater_bed.temperature)}
input: {printer.heater_bed.target}
input_min: 0
input_max: {printer.configfile.config.heater_bed.max_temp}
input_step: 1
gcode: M140 S{'%.0f' % menu.input}

[menu __e3 __temp __preheat_pla]
type: list
name: Preheat PLA

[menu __e3 __temp __preheat_pla __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S60
    M104 S200

[menu __e3 __temp __preheat_pla __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S200

[menu __e3 __temp __preheat_pla __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S60

[menu __e3 __temp __preheat_abs]
type: list
name: Preheat ABS

[menu __e3 __temp __preheat_abs __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Preheat all
gcode:
    M140 S110
    M104 S245

[menu __e3 __temp __preheat_abs __hotend]
type: command
enable: {'extruder' in printer}
name: Preheat hotend
gcode: M104 S245

[menu __e3 __temp __preheat_abs __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Preheat hotbed
gcode: M140 S110

[menu __e3 __temp __cooldown]
type: list
name: Cooldown

[menu __e3 __temp __cooldown __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Cooldown all
gcode:
    M104 S0
    M140 S0

[menu __e3 __temp __cooldown __hotend]
type: command
enable: {'extruder' in printer}
name: Cooldown hotend
gcode: M104 S0

[menu __e3 __temp __cooldown __hotbed]
type: command
enable: {'heater_bed' in printer}
name: Cooldown hotbed
gcode: M140 S0

### menu filament ###

[menu __e3 __filament]
type: list
name: Filament

[menu __e3 __filament __hotend0_target]
type: input
enable: {'extruder' in printer}
name: {"Ex0:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input: {printer.extruder.target}
input_min: 0
input_max: {printer.configfile.config.extruder.max_temp}
input_step: 1
gcode: M104 T0 S{'%.0f' % menu.input}

[menu __e3 __filament __loadf]
type: command
name: Load Fil. fast
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E50 F960
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __e3 __filament __loads]
type: command
name: Load Fil. slow
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E50 F240
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __e3 __filament __unloadf]
type: command
name: Unload Fil.fast
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E-50 F960
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __e3 __filament __unloads]
type: command
name: Unload Fil.slow
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E-50 F240
    RESTORE_GCODE_STATE NAME=__filament__load

[menu __e3 __filament __feed]
type: input
name: Feed: {'%.1f' % menu.input}
input: 5
input_step: 0.1
gcode:
    SAVE_GCODE_STATE NAME=__filament__load
    M83
    G1 E{'%.1f' % menu.input} F60
    RESTORE_GCODE_STATE NAME=__filament__load

### menu setup ###
[menu __e3 __setup]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Setup

[menu __e3 __setup __save_config]
type: command
name: Save config
gcode: SAVE_CONFIG

[menu __e3 __setup __restart]
type: list
name: Restart

[menu __e3 __setup __restart __host_restart]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Restart host
gcode: RESTART

[menu __e3 __setup __restart __firmware_restart]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Restart FW
gcode: FIRMWARE_RESTART

[menu __e3 __setup __tuning]
type: list
name: PID tuning

[menu __e3 __setup __tuning __hotend_pid_tuning]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('extruder' in printer)}
name: Tune Hotend PID
gcode: PID_CALIBRATE HEATER=extruder TARGET=210 WRITE_FILE=1

[menu __e3 __setup __tuning __hotbed_pid_tuning]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('heater_bed' in printer)}
name: Tune Hotbed PID
gcode: PID_CALIBRATE HEATER=heater_bed TARGET=60 WRITE_FILE=1

[menu __e3 __setup __calib]
type: list
name: Calibration

[menu __e3 __setup __calib __delta_calib_auto]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('delta_calibrate' in printer)}
name: Delta cal. auto
gcode:
    G28
    DELTA_CALIBRATE

[menu __e3 __setup __calib __delta_calib_man]
type: list
enable: {(not printer.idle_timeout.state == "Printing") and ('delta_calibrate' in printer)}
name: Delta cal. man

[menu __e3 __setup __calib __bedprobe]
type: command
enable: {(not printer.idle_timeout.state == "Printing") and ('probe' in printer)}
name: Bed probe
gcode: PROBE

[menu __e3 __setup __calib __delta_calib_man __start]
type: command
name: Start probing
gcode:
    G28
    DELTA_CALIBRATE METHOD=manual

[menu __e3 __setup __calib __delta_calib_man __move_z]
type: input
name: Move Z: {'%03.2f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_step: 1
realtime: True
gcode:
    {%- if menu.event == 'change' -%}
        G1 Z{'%.2f' % menu.input}
    {%- elif menu.event == 'long_click' -%}
        G1 Z{'%.2f' % menu.input}
        SAVE_GCODE_STATE NAME=__move__axis
        G91
        G1 Z2
        G1 Z-2
        RESTORE_GCODE_STATE NAME=__move__axis
    {%- endif -%}

[menu __e3 __setup __calib __delta_calib_man __test_z]
type: input
name: Test Z: {['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
input: 6
input_min: 0
input_max: 11
input_step: 1
gcode:
    {%- if menu.event == 'long_click' -%}
        TESTZ Z={['++','+','+.01','+.05','+.1','+.5','-.5','-.1','-.05','-.01','-','--'][menu.input|int]}
    {%- endif -%}

[menu __e3 __setup __calib __delta_calib_man __accept]
type: command
name: Accept
gcode: ACCEPT

[menu __e3 __setup __calib __delta_calib_man __abort]
type: command
name: Abort
gcode: ABORT

[menu __e3 __setup __dump]
type: command
name: Dump parameters
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
         { action_respond_info("printer['%s'].%s = %s"
                               % (name1, name2, printer[name1][name2])) }
      {% else %}
         { action_respond_info("printer['%s'] = %s" % (name1, printer[name1])) }
      {% endfor %}
   {% endfor %}

[menu __e3 testing]
type: list
name: Testing

[menu __e3 testing printMessage]
type: command
name: Print Message on Screen
gcode:
	M117 Testing!
	M117 Also testing!
	G4 P1500 ; sleep 1.5s
	M117 Testing after wait!
	UPDATE_DELAYED_GCODE ID=clear_display DURATION=5
