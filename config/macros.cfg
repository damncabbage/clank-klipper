# TODO:
# https://gist.github.com/bistory/629b596c5c49d6b01f5cf06ea2f2690f
# for history loading

# TODO:
# Allow setting vars (via octo) that do things like soak time, post-print keep-warm, etc

# IT'S MACRO TIME BABY

# PrusaSlicer code for start:
#   G90 ; use absolute coordinates
#   M83 ; extruder relative mode
#   M140 S{first_layer_bed_temperature[0]} ; set final bed temp
#   M104 S150 ; set temporary nozzle temp to prevent oozing during homing
#   G4 S10 ; allow partial nozzle warmup
#   G28 ; home all axis
#   G1 Z50 F240
#   G1 X2 Y10 F3000
#   M104 S{first_layer_temperature[0]} ; set final nozzle temp
#   M190 S{first_layer_bed_temperature[0]} ; wait for bed temp to stabilize
#   M109 S{first_layer_temperature[0]} ; wait for nozzle temp to stabilize
#   G1 Z0.28 F240
#   G92 E0
#   G1 Y140 E10 F1500 ; prime the nozzle
#   G1 X2.3 F5000
#   G92 E0
#   G1 Y10 E10 F1200 ; prime the nozzle
#   G92 E0

# ... and end:
#   {if max_layer_z < max_print_height}G1 Z{z_offset+min(max_layer_z+2, max_print_height)} F600 ; Move print head up{endif}
#   G1 X5 Y{print_bed_max[1]*0.8} F{travel_speed*60} ; present print
#   {if max_layer_z < max_print_height-10}G1 Z{z_offset+min(max_layer_z+70, max_print_height-10)} F600 ; Move print head further up{endif}
#   {if max_layer_z < max_print_height*0.6}G1 Z{max_print_height*0.6} F600 ; Move print head further up{endif}
#   M140 S0 ; turn off heatbed
#   M104 S0 ; turn off temperature
#   M107 ; turn off fan
#   M84 X Y E ; disable motors

#########################
# Start + End of Printing 
#########################

[gcode_macro START_PRINT]
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set NOZZLE_TEMP = params.NOZZLE_TEMP|default(215)|float %}
  {% set BED_MESH_NOZZLE_TEMP = 165|float %}
  {% set MATERIAL = params.MATERIAL %}

  G90 ; use absolute coordinates
  M83 ; extruder relative mode

  ; if, at macro-start time, the nozzle is hotter than the temporary nozzle temp, then just leave it as it is.
  ; {% if printer.extruder.temperature >= BED_MESH_NOZZLE_TEMP %}
  M104 S{BED_MESH_NOZZLE_TEMP} ; set temporary nozzle temp to prevent oozing during homing
  ; {% endif %}

  ; if, at macro-start time, the bed is nowhere near hot enough, add some extra soak-time.
  ; (accurate homing depends on this, until I can get a superpinda or something)
  {% if printer.heater_bed.temperature < (BED_TEMP - 20) %}
    ; TODO: scale soak to temp?
    M117 Heater Soak
    RESPOND_INFO MSG="Heater needs soak (currently only {printer.heater_bed.temperature}), waiting for 2.5 minutes before homing."
    M190 S{BED_TEMP} ; set + wait for bed temp
    ; TODO: turns out the timeout checker is freaking out about START_PRINT, not this
    G4 P120000 ; 2 minutes
  {% elif printer.heater_bed.temperature < (BED_TEMP - 5) %}
    M117 Heater Soak
    RESPOND_INFO MSG="Heater soak for 1 minute before homing"
    M190 S{BED_TEMP} ; set + wait for bed temp
    G4 P30000 ; 30s minute
  {% else %}
    M190 S{BED_TEMP} ; set + wait for bed temp
  {% endif %}

  ; Set + wait for mesh nozzle temp; this is the temp we did the levelling at,
  ; and if it's a factor in anything, we want to wait for it.
  ; (Bonus, it might give us more time for the bed temp to stabilise.)
  M109 S{BED_MESH_NOZZLE_TEMP}

  G28 ; home all axes, now the bed is up to temp.

  #BED_MESH_CALIBRATE ; do this manually, from time to time.
  BED_MESH_PROFILE LOAD=default

  SET_MATERIAL_PROPERTIES_FOR_PRINT MATERIAL={MATERIAL}

  G1 Z10 F240 ; raise slowly

  G1 X0 Y0 F3000 ; move nozzle to bottom-left corner

  M109 S{NOZZLE_TEMP} ; set final nozzle temp and wait for it to stabilize

  SET_SKEW CLEAR=1 ; no skew for the initial wipe, just to make sure

  ; Pushes the filament back into the Revo, it previously having been retracted in END_PRINT
  G92 E0
  G1 E15 F1500

  G92 E0
  G1 Y2 Z0.28 F240
  G1 Y140 E10 F1500 ; prime the nozzle with front-to-back wipe
  G1 X0.3 F5000 ; move right a smidge
  G92 E0
  G1 Y8 E10 F1200 ; prime the nozzle with a back-to-front wipe, but not as far forward as we started in case there's a blob.
  G92 E0

  SKEW_PROFILE LOAD=ender3

  M221 S95 ; start a little flow on the way to the initial skirt

[gcode_macro END_PRINT]
gcode:
	; reset to 'print again' temp in case this was a failure
  HOTEND_PREHEAT_ASYNC
  BED_PREHEAT_ASYNC

  G91 ; relative mode
  G1 Z2 E-3 F300 ; move nozzle 2mm up from print while retracting
  G1 Z50 F3000 ; and then up another 50mm to make the underside of the nozzle carriage easier to clean

  G90 ; absolute mode
  G1 X0 Y200 F4200 ; park print head to left, present print

  ; Pull the filament out of the revo and back into the bowden, in case we want to change nozzles.
  G92 E0
  G1 E-15 F3000

  M400 ; wait for moves to finish
  M84 S300 ; disable steppers, with 5 minutes grace before it kicks in.

	; now start the cool-down
  HOTEND_COOLDOWN_ASYNC
  BED_COOLDOWN_ASYNC
  M107 ; turn off part cooling fan


# TODO: have it read values from variables; restarting to adjust offset sucks. adjusting offset from printer is good.
[gcode_macro SET_MATERIAL_PROPERTIES_FOR_PRINT]
gcode:
    {% set MATERIAL = params.MATERIAL|default('PLA')|string %}
    {% if MATERIAL == 'PLA' %}
        # Load bed mesh
        #BED_MESH_PROFILE LOAD="pla_mesh"
        # Set pressure_advance settings
        #SET_PRESSURE_ADVANCE ADVANCE=0.035 SMOOTH_TIME=0.040
        # TODO: Varies per nozzle size
        SET_PRESSURE_ADVANCE ADVANCE=0.115
			  # DD: 23mm * 0.005 = 0.115
				# Was (Creality extruder): 0.438

        # Set z_offset settings
        #SET_GCODE_OFFSET Z=0.01
        SET_GCODE_OFFSET Z={ printer["gcode_macro Z_OFFSET"].offset }
    {% elif MATERIAL == 'PETG' %}
        #BED_MESH_PROFILE LOAD="pla_mesh"
        #SET_PRESSURE_ADVANCE ADVANCE=0.035 SMOOTH_TIME=0.040
        #SET_PRESSURE_ADVANCE ADVANCE=0.375 # old, Creality
        SET_PRESSURE_ADVANCE ADVANCE=0.115
        #SET_GCODE_OFFSET Z=-0.205
        SET_GCODE_OFFSET Z={ printer["gcode_macro Z_OFFSET"].offset }
    {% else %}
        #BED_MESH_PROFILE LOAD="default"
        #SET_PRESSURE_ADVANCE ADVANCE=0.035 SMOOTH_TIME=0.040
        SET_GCODE_OFFSET Z=0
    {% endif %}

[gcode_macro SAFELY_RAISE]
gcode:
    {% set z_max = printer.toolhead.axis_maximum.z %}   
    {% set z_pos = printer.toolhead.position.z %}
    {% set park_height = 15 %}
    {% set z = params.Z|default(park_height)|float %}
    ; TODO: check assumption that this works with G90
    {% if z_pos > z_max %}
      M117 Z {z_pos}, Cannot raise
    {% elif z_pos > park_height + 0.04 %}
      M117 Z{z_pos}, goto { (( z_max - 10 - z_pos) * 0.5 ) + z_pos }
      G1 Z{ (( z_max - 10 - z_pos) * 0.5 ) + z_pos } F600
    {% elif z_pos < park_height -0.04 %}
      M117 Z {z_pos}, goto {park_height}
      G1 Z{z} F600
    {% else %}
      M117 Already at park height
    {% endif %}
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10

[gcode_macro HOME_UNHOMED_AXES]
gcode:
  # Do all this to avoid the Z+5 hop every time we
  # do an individual axis-specific G28.
  {% set ns = namespace(AXES = []) %}
  {% for AXIS in ["x", "y", "z"] %}
    {% if AXIS not in printer.toolhead.homed_axes %}
      {% set junk = ns.AXES.append(AXIS) %}
    {% endif %}
  {% endfor %}
  {% if ns.AXES %}
    G28 {ns.AXES|join(" ")}
  {% endif %}

[gcode_macro BED_MESH_CALIBRATE_AND_SAVE]
gcode:
  {% set OLD_MATERIAL = printer.save_variables.variables.current_material | default('PLA') | string %}

	; We always do everything in terms of the PLA temp+bed
	SET_LOADED_MATERIAL MATERIAL=PLA

  BED_PREHEAT_AND_WAIT
  G28

  M400 ; wait for all moves (the G28)
  BED_MESH_CALIBRATE PROFILE=default
  ; TODO: check if needed; might have just been the Macro plugin
  M400 ; wait for all moves (the bed-mesh command...???)

	; Restore loaded material
	SET_LOADED_MATERIAL MATERIAL={ OLD_MATERIAL }

  M140 S0 ; start bed cooldown
  G4 P500

  M117 Done. Saving & restarting...
  G4 P1000
  SAVE_CONFIG ; saves + restarts

[gcode_macro FILAMENT_LOAD]
gcode:
  {% set MATERIAL = printer.save_variables.variables.current_material %}
  SAVE_GCODE_STATE NAME=__filament__load
  HOTEND_PREHEAT_AND_WAIT
  M83 ; E relative mode
  G1 E100 F960 ; fast
  G1 E100 F960 ; fast
  G1 E100 F960 ; fast
  G1 E70  F960 ; fast
  M117 Loaded, Purging...
  G1 E100 F400 ; slowish
  G1 E100 F240 ; slooow
  M117 Loaded.
  ; TODO: Confirmation? Keep Purging?
  ; TODO: M300 BEEP
  UPDATE_DELAYED_GCODE ID=clear_display DURATION=5
  RESTORE_GCODE_STATE NAME=__filament__load
  
[gcode_macro FILAMENT_UNLOAD]
gcode:
  SAVE_GCODE_STATE NAME=__filament__load
	HOTEND_PREHEAT_AND_WAIT
  M83 ; E relative mode
  G1 E+4   F240 ; E=+4; shape filament end
  G1 E-54  F400 ; E=-50
  G1 E-100 F960 ; E=-150; fast
  G1 E-100 F960 ; E=-250; fast
  G1 E-100 F960 ; E=-350; fast
  G1 E-100 F960 ; E=-450; fast
  G1 E-100 F960 ; E=-500; fast
  G1 E-50 F960  ; E=-500; fast ; should already be unloaded by now
	M117 Unloaded.
	; TODO: M300 BEEP
	UPDATE_DELAYED_GCODE ID=clear_display DURATION=5
  RESTORE_GCODE_STATE NAME=__filament__load

[gcode_macro RESPOND_INFO]
gcode:
  {% if 'MSG' in params %}
    M117 {params.MSG}
    RESPOND PREFIX="//" MSG="{params.MSG}"
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10
  {% endif %}


###############
# Compatibility
###############

# Octoprint+Marlin compatibility
# TODO: M600 filament change
[gcode_macro M601]
gcode:
  PAUSE
[gcode_macro M602]
gcode:
  RESUME

# Avoid "Invalid M204" errors because nothing produces M204 with _both_ P and T set.
[gcode_macro M204]
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}

  {% if 'S' in params %}
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
    {% if 'P' in params %}
      {% set p = params.P|float %}
      {% if 'T' in params %}
        {% set t = params.T|float %}
        {% if p < t %}
          SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
      {% endif %}
    {% elif 'T' in params %}
      {% set t = params.T|float %}
      SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
    {% endif %}
  {% endif %}


###############
# Sound
###############

;[gcode_macro M300]
;default_parameter_S: 1000
;default_parameter_P: 100
;gcode:
;    SET_PIN PIN=BEEPER_pin VALUE={S}
;    G4 P{P}
;    SET_PIN PIN=BEEPER_pin VALUE={S}
;#Custom M300 code to allow beeper to be used in gcode
;
;[gcode_macro end_tune]
;gcode:
;    M300 S3135 P75
;    M300 S3135 P150
;    M300 S1760 P150
;    M300 S1760 P150
;    M300 S2637 P150
;    M300 S2637 P150
;    M300 S3135 P150
;    SET_PIN PIN=BEEPER_pin VALUE=0


##################
# Helpers / Utils
##################

[gcode_macro SET_Z]
gcode:
  {% set NEW_Z = params.Z | default(99) %}
	{% if NEW_Z != 99 %}
    SET_GCODE_VARIABLE MACRO=Z_OFFSET VARIABLE=offset VALUE={params.Z}
  {% endif %}

[gcode_macro SET_LOADED_MATERIAL]
gcode:
  {% set NEW_MATERIAL = params.MATERIAL | default('PLA') | string %}
  SAVE_VARIABLE VARIABLE=current_material VALUE='"{ NEW_MATERIAL }"'
  REFRESH_MATERIAL_PROPERTY_TABLES

[gcode_macro REFRESH_MATERIAL_PROPERTY_TABLES]
gcode:
  BED_TEMP
  NOZ_TEMP
  Z_OFFSET

[delayed_gcode init_temp_tables]
initial_duration: .01
gcode:
	REFRESH_MATERIAL_PROPERTY_TABLES

[gcode_macro BED_TEMP]
variable_temp: 0
gcode:
  {% set MATERIAL = printer.save_variables.variables.current_material | default('PLA') | string %}
  {% if MATERIAL == 'PLA' %}
    SET_GCODE_VARIABLE MACRO=BED_TEMP VARIABLE=temp VALUE=66
  {% elif MATERIAL == 'PETG' %}
    SET_GCODE_VARIABLE MACRO=BED_TEMP VARIABLE=temp VALUE=90
	{% else %}
		RESPOND_INFO MSG="cannot find bed temp value for { MATERIAL }"
  {% endif %}

[gcode_macro NOZ_TEMP]
variable_temp: 0
gcode:
  {% set MATERIAL = printer.save_variables.variables.current_material | default('PLA') | string %}
  {% if MATERIAL == 'PLA' %}
    SET_GCODE_VARIABLE MACRO=NOZ_TEMP VARIABLE=temp VALUE=210
  {% elif MATERIAL == 'PETG' %}
    SET_GCODE_VARIABLE MACRO=NOZ_TEMP VARIABLE=temp VALUE=245
	{% else %}
		RESPOND_INFO MSG="cannot find noz temp value for { MATERIAL }"
  {% endif %}

[gcode_macro Z_OFFSET]
variable_offset: 0
gcode:
  {% set MATERIAL = printer.save_variables.variables.current_material | default('PLA') | string %}
  {% if MATERIAL == 'PLA' %}
    SET_GCODE_VARIABLE MACRO=Z_OFFSET VARIABLE=offset VALUE=0.050 # was -0.01
  {% elif MATERIAL == 'PETG' %}
    SET_GCODE_VARIABLE MACRO=Z_OFFSET VARIABLE=offset VALUE=-0.250 # was -0.240
	{% else %}
		RESPOND_INFO MSG="cannot find z-offset value for { MATERIAL }"
  {% endif %}

[delayed_gcode clear_display]
gcode: M117

[gcode_macro BED_PREHEAT_ASYNC]
gcode:
  M140 S{ printer["gcode_macro BED_TEMP"].temp }

[gcode_macro BED_PREHEAT_AND_WAIT]
gcode:
  M190 S{ printer["gcode_macro BED_TEMP"].temp }

[gcode_macro BED_COOLDOWN_ASYNC]
gcode:
  M140 S0

[gcode_macro HOTEND_PREHEAT_ASYNC]
gcode:
  M104 T0 S{ printer["gcode_macro NOZ_TEMP"].temp }

[gcode_macro HOTEND_PREHEAT_AND_WAIT]
gcode:
  M109 T0 S{ printer["gcode_macro NOZ_TEMP"].temp }

[gcode_macro HOTEND_COOLDOWN_ASYNC]
gcode:
  M104 S0

[gcode_macro PRESSURE_ADVANCE_PREPRINT_SETUP]
gcode:
  {% set factor = params.FACTOR|default(0.005) %}

  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
  TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR={factor}
  M117 Ready.
  # TODO: can we actually start a particular print here?

  # The calculation:
  #   pressure_advance = <start> + <measured_height_in_mm> * <factor>
  # eg.
  #   pressure_advance = 0 + <measured_height_in_mm> * 0.025

  # pa = 35 * 0.030
